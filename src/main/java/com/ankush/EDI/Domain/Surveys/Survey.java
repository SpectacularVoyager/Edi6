package com.ankush.EDI.Domain.Surveys;

import com.ankush.EDI.Utils.In.In;
import com.ankush.ReflectionUtils.Annotations.AutoGenerated;
import com.ankush.ReflectionUtils.Annotations.Insert;
import com.ankush.ReflectionUtils.Annotations.Select;
import com.ankush.ReflectionUtils.JDBCInsert;
import com.ankush.ReflectionUtils.JDBCRowMapper;
import lombok.*;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;

import java.sql.*;
import java.util.List;
import java.util.stream.Collectors;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@ToString
public class Survey {
    int surveyID;
    String userid;
    List<Integer> answers;
    int score;
    Timestamp timestamp;

    public void compute(String userid, boolean time) {
        if (time)
            this.timestamp = new Timestamp(System.currentTimeMillis());
        this.score = answers.stream().reduce(0, Integer::sum);
        this.userid = userid;
    }

    public void insert(JdbcTemplate template) {
        KeyHolder keyHolder = new GeneratedKeyHolder();
        template.update((con) -> {
            PreparedStatement ps = con.prepareStatement("INSERT INTO surveys (answers,userid,timestamp) values(?,?,?)", Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, answers.stream().map(String::valueOf).collect(Collectors.joining(",")));
            ps.setString(2, userid);
            ps.setTimestamp(3, timestamp);
            return ps;
        }, keyHolder);
        this.surveyID = keyHolder.getKey().intValue();
    }
}
